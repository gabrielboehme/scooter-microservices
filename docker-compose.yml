version: '3'
services:
  gateway:
    environment:
      - DB_HOST=scooterdb
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PWD=scooteradmin
      - DB_NAME=scooterdb
      - DB_SSL=disable
      - APP_PORT=8000
      - DEPLOYMENT=PROD
    build:
      context: ./gateway          # Use the current directory as the build context
      dockerfile: Dockerfile  # Dockerfile for building the Go application
    env_file:
      - ./gateway/.env
    ports:
      - "8000:8000"        # Map host port to container port
    networks:
      - scooter-net
    depends_on:
      - scooterdb
  
  user-app:
    environment:
      - DB_HOST=scooterdb
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PWD=scooteradmin
      - DB_NAME=scooterdb
      - DB_SSL=disable
      - APP_PORT=8000
      - DEPLOYMENT=PROD
    build:
      context: ./services/users          # Use the current directory as the build context
      dockerfile: Dockerfile  # Dockerfile for building the Go application
    networks:
      - scooter-net
    depends_on:
      - scooterdb

  scooter-app:
    environment:
      - DB_HOST=scooterdb
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PWD=scooteradmin
      - DB_NAME=scooterdb
      - DB_SSL=disable
      - APP_PORT=8000
      - DEPLOYMENT=PROD
    build:
      context: ./services/scooter          # Use the current directory as the build context
      dockerfile: Dockerfile  # Dockerfile for building the Go application
    networks:
      - scooter-net
    depends_on:
      - scooterdb

  rents-app:
      environment:
        - DB_HOST=scooterdb
        - DB_PORT=5432
        - DB_USER=admin
        - DB_PWD=scooteradmin
        - DB_NAME=scooterdb
        - DB_SSL=disable
        - APP_PORT=8000
        - DEPLOYMENT=PROD
      build:
        context: ./services/rents          # Use the current directory as the build context
        dockerfile: Dockerfile  # Dockerfile for building the Go application
      networks:
        - scooter-net
      depends_on:
        - scooterdb

  access_control-app:
      environment:
        - DB_HOST=scooterdb
        - DB_PORT=5432
        - DB_USER=admin
        - DB_PWD=scooteradmin
        - DB_NAME=scooterdb
        - DB_SSL=disable
        - APP_PORT=8000
        - DEPLOYMENT=PROD
      build:
        context: ./services/access_control          # Use the current directory as the build context
        dockerfile: Dockerfile  # Dockerfile for building the Go application
      networks:
        - scooter-net
      depends_on:
        - scooterdb
  
  payments-app:
      environment:
        - DB_HOST=scooterdb
        - DB_PORT=5432
        - DB_USER=admin
        - DB_PWD=scooteradmin
        - DB_NAME=scooterdb
        - DB_SSL=disable
        - APP_PORT=8000
        - DEPLOYMENT=PROD
      build:
        context: ./services/payments          # Use the current directory as the build context
        dockerfile: Dockerfile  # Dockerfile for building the Go application
      networks:
        - scooter-net
      depends_on:
        - scooterdb

  scooterdb:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: scooteradmin
      POSTGRES_DB: scooterdb
    ports:
      - "5432:5432"        # Map host port to container port
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h db -p 5432 -U myuser"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scooter-net
    volumes:
      - scooterdb-pg-data:/var/lib/postgresql/data

networks:
  scooter-net:

volumes:
  scooterdb-pg-data:  # Define a named volume for PostgreSQL data